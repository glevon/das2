{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","state","products","id","name","image","price","count","cart","sum","item","i","this","prod","Object","assign","quantity","k","find","x","push","setState","alert","s","forEach","q","splice","indexOf","o","console","log","className","map","index","key","style","height","width","float","src","alt","color","onClick","addCart","bind","a","minus","plus","delete","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.53cf4b98.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(){\n    super()\n    this.state={\n      products:[\n        {\n          id:101,\n          name:\"prd1\",\n          image:\"./images/1.png\", \n          price:450,\n          count:12,\n        },\n        {\n          id:102,\n          name:\"prod2\",\n          image:\"./images/2.png\", \n          price:700,\n          count:8,\n        },\n        {\n          id:103,\n          name:\"prod3\",\n          image:\"./images/3.png\", \n          price:1400,\n          count:20,\n        },\n        {\n          id:104,\n          name:\"prod4\",\n          image:\"./images/4.png\", \n          price:500,\n          count:16,\n        },\n        {\n          id:105,\n          name:\"prod5\",\n          image:\"./images/5.png\", \n          price:700,\n          count:6,\n        },\n      ],\n    cart:[],\n    sum:0,\n    }\n  }\n  addCart(item,i){\n    if(this.state.products[i].count>0){\n        let prod =Object.assign({quantity:1},this.state.products[i])\n      let k = this.state.cart.find(x=>{\n        return x.id === this.state.products[i].id\n      })\n      if(k){\n        k.quantity++\n      }\n      else{\n        this.state.cart.push(prod)\n      }\n      this.state.products[i].count--\n      this.setState({})\n    }\n    else{\n      alert(\"STOP...\")\n    }\n    this.sum()\n  }\n  sum(){\n    let s=0\n    this.state.cart.forEach(item=>{\n      s+=item.quantity*item.price\n    })\n    this.state.sum=s\n    this.setState({})\n  //   this.setState({\n  //     sum:s\n  //   })\n    }\n  minus(q){\n    if (q.quantity>1){\n      q.quantity--\n    }\n    else{\n      this.state.cart.splice(this.state.cart.indexOf(q),1)\n      // this.state.cart.splice(q,1)\n    }\n    this.state.products.find(o => o.id === q.id).count++\n    this.sum()\n    this.setState({})\n  }\n  plus(q){\n    if (this.state.products.find(o => o.id === q.id).count>0){\n      q.quantity++\n      this.state.products.find(o => o.id === q.id).count--\n    }\n    else{\n      alert(\"STOP...\")\n    }\n    this.sum()\n    this.setState({})\n  }\n  delete(q){\n    console.log(q)\n    this.state.products.find(o => o.id === q.id).count+=q.quantity\n    this.state.cart.splice(this.state.cart.indexOf(q),1)\n    // this.state.cart.splice(q,1)\n    this.sum()\n    this.setState({})\n  }\n\n  render(){\n    return (\n      <div className=\"row\">\n        <div className=\"col-8\">\n          <h1>Products</h1>\n          {\n            this.state.products.map((item, index)=>(\n              <div key={index} className=\"card\" style={{ height:\"285px\", width:\"200px\", float :\"left\"}}>\n                <img className=\"card-img-top\" src={item.image} alt={item.name} style={{ height:\"150px\"}} ></img>\n                <div>\n                  <h4 className=\"card-name\">{item.name}</h4>\n                  <h5 className=\"card-name\">{item.price}</h5>\n                  <h6 className=\"card-name\" style={{color:item.count==0?\"red\":\"\"}} >{item.count}</h6>\n                </div>\n                <button onClick={this.addCart.bind(this,item,index)} className = \"btn btn-outline-warning\">Add to cart</button>\n              </div>\n            ))\n          }\n        </div>\n        <div className=\"col-3\">\n          <h1>Cart</h1>\n          <table className=\"table table-hover\">\n            <thead>\n              <tr>\n                <th>Image</th>\n                <th>Name</th>\n                <th>Price</th>\n                <th>Quantity</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody> \n              {\n                this.state.cart.map((a, i)=>(\n                  <tr key ={a.id}>\n                  <td>\n                  <img alt={a.name} src={a.image} style={{height:\"60px\",width:\"60px\"}}></img>\n                  </td>\n                  <td>\n                    {a.name}\n                  </td>\n                  <td>\n                    {a.price}\n                  </td>\n                  <td>\n                    {a.quantity}\n                  </td>\n                  <button className=\"btn btn-primary\" onClick= {this.minus.bind(this,a)}>-</button>\n                  <button className=\"btn btn-success\" onClick= {this.plus.bind(this,a)}>+</button>\n                  <button className=\"btn btn-danger\" onClick= {this.delete.bind(this,a)} >Delete</button>\n                  </tr>\n                ))\n              }\n            \n            </tbody>\n\n          </table>\n          <h3><i>Total sum:{this.state.sum}</i></h3>\n        </div>\n\n      </div>\n    )\n  }\n\n}\n\n// class App extends React.Component {\n//   constructor(){\n//     super()\n//     this.state={\n//       name:\"\"\n\n//     }\n//   }\n//   change(e){\n//     this.state.name =e.target.value\n//     this.setState({})\n\n//   }\n//   barev(){\n//     console.log(`barev ${this.state.name}`)\n//   }\n//   render(){\n//     return(\n//       <div>\n//         <input type=\"text\" value={this.state.name} onChange ={this.change.bind(this)}></input>\n//         <button onClick ={this.barev.bind(this)}>ok</button>\n//       </div>\n//     )\n//   }\n// }\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}